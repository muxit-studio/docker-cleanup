#!/bin/bash
set -e

if [[ "$1" == "docker-cli-plugin-metadata" ]]; then
  cat <<EOF
{
  "SchemaVersion": "0.1.0",
  "Vendor": "MUXIT Studio",
  "Version": "v0.1.1",
  "ShortDescription": "Clean up old docker images and containers"
}
EOF
  exit
fi

_help() {
  cat <<EOF
Usage: docker cleanup [COMMAND] [DAYS]

A Docker CLI plugin to clean up unused docker images, containers, volumes and
networks on a given days

Commands:
  help                Show this help message
  all                 Clean up all unused Docker objects (containers, images, volumes, networks)
  containers          Clean up unused containers
  images              Clean up unused images
  volumes             Clean up unused volumes
  networks            Clean up unused networks

Examples:
  docker cleanup all 30

EOF
}

if [[ "$1" == "cleanup" ]]; then
  shift
fi

DEFAULT_PERIOD=30

cmd="${1:-}"
period="$((${2:-$DEFAULT_PERIOD} * 24))h"

cleanup_all() {
  docker system prune -af --filter "until=$period"
}

cleanup_containers() {
  docker container prune -f --filter "until=$period"
}

cleanup_images() {
  docker image prune -af --filter "until=$period"
}

cleanup_volumes() {
  docker volume prune -f --filter "until=$period"
}

cleanup_networks() {
  docker network prune -f --filter "until=$period"
}

case "$cmd" in
  help)
    _help
    exit 0
    ;;
  all)
    cleanup_all "$@"
    ;;
  containers)
    cleanup_containers "$@"
    ;;
  images)
    cleanup_images "$@"
    ;;
  volumes)
    cleanup_volumes "$@"
    ;;
  networks)
    cleanup_networks "$@"
    ;;
  -*)
    echo "Error: Unknown option: $cmd"
    _help
    exit 1
    ;;
  *)
    _help
    exit 1
    ;;
esac
